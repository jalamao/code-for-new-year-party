var myChart = echarts.init(document.getElementById('main'));

var geoCoordMap = {
    '上海': [121.4648,31.2891],
    '东莞': [113.8953,22.901],
    '东营': [118.7073,37.5513],
    '中山': [113.4229,22.478],
    '临汾': [111.4783,36.1615],
    '临沂': [118.3118,35.2936],
    '丹东': [124.541,40.4242],
    '丽水': [119.5642,28.1854],
    '乌鲁木齐': [87.9236,43.5883],
    '佛山': [112.8955,23.1097],
    '保定': [115.0488,39.0948],
    '兰州': [103.5901,36.3043],
    '包头': [110.3467,41.4899],
    '北京': [116.4551,40.2539],
    '北海': [109.314,21.6211],
    '南京': [118.8062,31.9208],
    '南宁': [108.479,23.1152],
    '南昌': [116.0046,28.6633],
    '南通': [121.1023,32.1625],
    '厦门': [118.1689,24.6478],
    '台州': [121.1353,28.6688],
    '合肥': [117.29,32.0581],
    '呼和浩特': [111.4124,40.4901],
    '咸阳': [108.4131,34.8706],
    '哈尔滨': [127.9688,45.368],
    '唐山': [118.4766,39.6826],
    '嘉兴': [120.9155,30.6354],
    '大同': [113.7854,39.8035],
    '大连': [122.2229,39.4409],
    '天津': [117.4219,39.4189],
    '太原': [112.3352,37.9413],
    '威海': [121.9482,37.1393],
    '宁波': [121.5967,29.6466],
    '宝鸡': [107.1826,34.3433],
    '宿迁': [118.5535,33.7775],
    '常州': [119.4543,31.5582],
    '广州': [113.5107,23.2196],
    '廊坊': [116.521,39.0509],
    '延安': [109.1052,36.4252],
    '张家口': [115.1477,40.8527],
    '徐州': [117.5208,34.3268],
    '德州': [116.6858,37.2107],
    '惠州': [114.6204,23.1647],
    '成都': [103.9526,30.7617],
    '扬州': [119.4653,32.8162],
    '承德': [117.5757,41.4075],
    '拉萨': [91.1865,30.1465],
    '无锡': [120.3442,31.5527],
    '日照': [119.2786,35.5023],
    '昆明': [102.9199,25.4663],
    '杭州': [119.5313,29.8773],
    '枣庄': [117.323,34.8926],
    '柳州': [109.3799,24.9774],
    '株洲': [113.5327,27.0319],
    '武汉': [114.3896,30.6628],
    '汕头': [117.1692,23.3405],
    '江门': [112.6318,22.1484],
    '沈阳': [123.1238,42.1216],
    '沧州': [116.8286,38.2104],
    '河源': [114.917,23.9722],
    '泉州': [118.3228,25.1147],
    '泰安': [117.0264,36.0516],
    '泰州': [120.0586,32.5525],
    '济南': [117.1582,36.8701],
    '济宁': [116.8286,35.3375],
    '海口': [110.3893,19.8516],
    '淄博': [118.0371,36.6064],
    '淮安': [118.927,33.4039],
    '深圳': [114.5435,22.5439],
    '清远': [112.9175,24.3292],
    '温州': [120.498,27.8119],
    '渭南': [109.7864,35.0299],
    '湖州': [119.8608,30.7782],
    '湘潭': [112.5439,27.7075],
    '滨州': [117.8174,37.4963],
    '潍坊': [119.0918,36.524],
    '烟台': [120.7397,37.5128],
    '玉溪': [101.9312,23.8898],
    '珠海': [113.7305,22.1155],
    '盐城': [120.2234,33.5577],
    '盘锦': [121.9482,41.0449],
    '石家庄': [114.4995,38.1006],
    '福州': [119.4543,25.9222],
    '秦皇岛': [119.2126,40.0232],
    '绍兴': [120.564,29.7565],
    '聊城': [115.9167,36.4032],
    '肇庆': [112.1265,23.5822],
    '舟山': [122.2559,30.2234],
    '苏州': [120.6519,31.3989],
    '莱芜': [117.6526,36.2714],
    '菏泽': [115.6201,35.2057],
    '营口': [122.4316,40.4297],
    '葫芦岛': [120.1575,40.578],
    '衡水': [115.8838,37.7161],
    '衢州': [118.6853,28.8666],
    '西宁': [101.4038,36.8207],
    '西安': [109.1162,34.2004],
    '贵阳': [106.6992,26.7682],
    '连云港': [119.1248,34.552],
    '邢台': [114.8071,37.2821],
    '邯郸': [114.4775,36.535],
    '郑州': [113.4668,34.6234],
    '鄂尔多斯': [108.9734,39.2487],
    '重庆': [107.7539,30.1904],
    '金华': [120.0037,29.1028],
    '铜川': [109.0393,35.1947],
    '银川': [106.3586,38.1775],
    '镇江': [119.4763,31.9702],
    '长春': [125.8154,44.2584],
    '长沙': [113.0823,28.2568],
    '长治': [112.8625,36.4746],
    '阳泉': [113.4778,38.0951],
    '青岛': [120.4651,36.3373],
    '韶关': [113.7964,24.7028],
    "利雅得":[46.44, 24.39], // [经度, 维度]
    '贺州': [111.27,24.83]
};


var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';

var convertData = function (data) {
    var res = [];
    for (var i = 0; i < data.length; i++) {
        var dataItem = data[i];
        var fromCoord = geoCoordMap[dataItem[0].name];
        var toCoord = geoCoordMap[dataItem[1].name];
        if (fromCoord && toCoord) {
            res.push({
                fromName: dataItem[0].name,
                toName: dataItem[1].name,
                coords: [fromCoord, toCoord]
            });
        }
    }
    return res; //[{fromName: x, toName: x, coords: [x, x]}, ...]
};



function getMigrateData(yourData){ // yourData=[[{name:'北京'}, {name:'上海',value:95}], ...]
     var series = [];
     series.push(
        { // 第一层:飞机尾气特效层.

            type: 'lines',
            coordinateSystem: 'bmap', //用百度地图地理坐标.
            zlevel: 1,
            effect: {
                show: true,               // 动效是否显示
                period: 4,                // 飞机喷气的飞行速度,应该与飞机的速度一致.
                trailLength: 0.8,         // 特效尾迹的长度
                color: '#0EEDAD',            // 尾气特效颜色
                symbolSize: 8             // 特效大小
            },
            lineStyle: {
                normal: { // 第一层的lineStyle与第二层的lineStyle同时控制飞机航线,当width=0时,没有飞机航线.
                    color: "#0FE886",
                    width: 0,             // 因为是叠加效果，要是有宽度，线条会变粗，白色航线特效不明显
                    curveness: -0.2       // 线条曲度
                }
            },
            data: convertData(yourData)
        },
        { // 第二层:飞机飞行特效

            type: 'lines',
            coordinateSystem: 'bmap',
            zlevel: 2,
//            symbol: ['none', 'arrow'],   // 用于设置箭头
//            symbolSize: 10, //箭头大小.
            effect: {
                show: true,
                period: 4, // 小飞机的飞行速度.
                trailLength: 0,
                symbol: planePath, // 特效形状，可以用其他svg pathdata路径代替
                symbolSize: 30, //飞机的大小.
                color: '#CDCCCB', //小飞机的颜色.
            },
            lineStyle: { // // 第一层的lineStyle与第二层的lineStyle同时控制飞机航线,当width=0时,没有飞机航线.
                normal: {
                    color: "#1976D2", //连线的颜色.
                    width: 2, //连线的宽度.
                    opacity: 0.6,
                    curveness: -0.2
                }
            },
            data: convertData(yourData)
        },
        { //第三层: 涟漪特效层.

            type: 'effectScatter',
            coordinateSystem: 'bmap',
            zlevel: 2,

            showEffectOn: 'render', //绘制完成后显示波纹
            rippleEffect: {
                brushType: 'stroke'
            },
            label: {
                normal: {
                    show: true,
                    position: 'right',
                    formatter: '{b}'
                }
            },

            data: (function (yourData){ // [[], [], ...]
                  var returnData = [];
                  yourData.forEach(function(item, i){ // item=[{}, {}]

                     for(var j=0; j<item.length; j++){
                         var dataItem = item[j];
                         var temp = {
                            name: dataItem.name, //起始点.
                            value: geoCoordMap[dataItem.name].concat([dataItem.value]),  // 起点的位置 [x, y, v], v决定涟漪的颜色.
                            symbolSize: 10,  // 散点的大小，通过之前设置的权重来计算，val的值来自data返回的value
                            itemStyle: { //这里可以定制每个点的颜色.
                                normal: {
                                    color: "#DC471C", //波纹效果的颜色,可以自己定制颜色.
                                    shadowBlur: 10,
                                    shadowColor: '#333'
                                }
                            },
                            rippleEffect: { //这里可以定制每个点的涟漪效果.
                                period:1,//动画速度
                                scale:5,//波纹的范围
                                brushType: 'fill'//波纹样式(fill填充型) stroke/fill
                            }
                        };

                       if(returnData.length > 0){
                          var counter = 0;
                          for(var jj=0; jj<returnData.length; jj++){
                              var itemObj = returnData[jj];
                              if(itemObj.name == dataItem.name){
                               counter ++;
                               break;
                             }
                          }
                          if(counter == 0){
                            returnData.push(temp);
                          }
                       }
                       else{
                         returnData.push(temp);
                       }
                     }

                  });
//                  console.log(returnData);
                  return returnData;


                })(yourData)
        }
     );

     return series; //[{}, {}, {}], 三个特效层.
}

//var series = getMigrateData(BeijingToOtherPlaces);
var option = {
    backgroundColor: '#404a59',
    title : {
        show: false,
        text: '模拟迁徙',
        subtext: '数据纯属虚构',
        left: 'center',
        textStyle : {
            color: '#fff'
        }
    },
    tooltip : {
        trigger: 'item'
    },
    legend: {
        show:false,
        orient: 'vertical',
        top: 'bottom',
        left: 'right',
        data:['北京 Top10', '上海 Top10', '广州 Top10'],
        textStyle: {
            color: '#fff'
        },
        selectedMode: 'single'
    },
    dataRange: {
        show:false,
        min: 0,
        max: 100,
        x: 'right',
        calculable: true,
        color: ['#ff3333', 'orange', 'yellow', 'lime', 'aqua'],
        textStyle: {
            color: '#fff'
        }
    },
    bmap: {
        center: [103.9526,30.7617], // 百度地图的中心点:成都.
        zoom: 5,
        roam: true // 备注:用echarts设置mapStyle时,会出现小白格现象.而使用百度地图API:map.setMapStyle,则不会出现此情况.
    },
    series: []
};

myChart.setOption(option); //初始化配置.

var BeijingToOtherPlaces = [
    [{name:'北京',value:95}, {name:'沈阳',value:30}],
    [{name:'北京',value:95}, {name:"石家庄",value:30}],
    [{name:'北京',value:95}, {name:"济南",value:30}],
    [{name:'北京',value:95}, {name:"郑州",value:30}],
    [{name:'北京',value:95}, {name:"南京",value:30}],
    [{name:'北京',value:95}, {name:'上海',value:30}],
    [{name:'北京',value:95}, {name:"合肥",value:30}],
    [{name:'北京',value:95}, {name:"长沙",value:30}],
    [{name:'北京',value:95}, {name:"广州",value:30}],
    [{name:'北京',value:95}, {name:"南宁",value:30}],
    [{name:'北京',value:95}, {name:"海口",value:30}],
    [{name:'北京',value:95}, {name:"成都",value:30}],
    [{name:'北京',value:95}, {name:"昆明",value:30}],
    [{name:'北京',value:95}, {name:"拉萨",value:30}],
    [{name:'北京',value:95}, {name:"利雅得",value:30}],
    [{name:'北京',value:95}, {name:"西安",value:30}]
];

var capitalVsProvince = {
    "沈阳":'辽宁',
    "南京":'江苏',
    "成都":'四川',
    "广州":'广东',
    "昆明":'云南',
    "南宁":'广西',
    "海口":'海南',
    "利雅得": '沙特阿拉伯',
    "长沙":'湖南',
    "拉萨":'西藏',
    '上海':'上海',
    "石家庄":'河北',
    "济南":'山东',
    "郑州":'河南',
    "合肥":'安徽',
    "西安": '陕西'
};

var map = myChart.getModel().getComponent('bmap').getBMap(); //获得百度地图API.
//通过取色器获取各省颜色
var regionList = [["沙特阿拉伯", "#F09ABD"], ["黑龙江","#F09ABD"],["吉林","#01933F"],["辽宁","#FAC300"],["内蒙古","#FCF502"],["河北","#F09ABD"],["北京","#FCF502"],["天津","#01933F"],["山东","#FCF502"],["江苏","#D8EDDA"],["上海","#B9B4C8"],["浙江","#FCF502"],["福建","#FAC300"],["台湾","#F09ABD"],["广东","#FCF502"],["香港","#F09ABD"],["澳门","#F09ABD"],["海南","#F09ABD"],["广西","#FAC300"],["云南","#FCF502"],["西藏","#B9B4C8"],["新疆","#FAC300"],["甘肃","#01933F"],["青海","#F09ABD"],["四川","#FAC300"],["贵州","#01933F"],["重庆","#B9B4C8"],["湖南","#F09ABD"],["江西","#01933F"],["湖北","#FCF502"],["安徽","#FAC300"],["河南","#B9B4C8"],["陕西","#F09ABD"],["山西","#01933F"],["宁夏","#FAC300"]];

//map.centerAndZoom("成都", 5); //取兰州作为中心点

map.addControl(new BMap.NavigationControl()); // 缩放控件
//map.addControl(new BMap.ScaleControl()); // 比例尺图标.
//map.enableScrollWheelZoom(); //使能鼠标滚动放大.
map.setMapStyle({
    features: ["road", "building", "water", "land"],//隐藏地图上的poi
    style: "normal"  //设置地图风格 midnight:午夜蓝, dark:高端黑, 清新蓝风格(light) 清新蓝风格(light) googlelite(白) normal(白)
});

function getBoundary(provItem){ //获得边界函数. provItem=["黑龙江","#F09ABD"]

  var bdary = new BMap.Boundary(); // API:获得边界.
  var name = provItem[0]; // 名字.
  var fillColor = provItem[1]; // 颜色.

  bdary.get(name, function(rs){       //获取行政区域

    var count = 0;
    if(name == "沙特阿拉伯"){
      var shate = {boundaries:["41.98769531250005, 16.715625;42.059960937499994, 16.803515625000017;42.15781250000006, 16.570703125000023;41.80156250000002, 16.778759765624955;41.86044921875006, 17.002539062499977;41.98769531250005, 16.715625", "46.53144531250004, 29.09624023437499;47.433203125, 28.989550781250017;47.671289062499994, 28.53315429687504;48.442480468750006, 28.542919921874983;48.80898437499999, 27.895898437499966;48.797167968750074, 27.72431640625001;49.2375, 27.49272460937499;49.17509765625002, 27.43764648437505;49.40527343749997, 27.18095703124996;50.149804687499994, 26.66264648437499;50.00810546875002, 26.678515625000017;50.21386718750003, 26.30849609375005;50.15546875000004, 26.100537109374955;50.03164062499999, 26.11098632812505;50.55791015625002, 25.086669921875;50.66689453125005, 24.96381835937501;50.72558593749997, 24.869384765625057;50.80439453125004, 24.789257812499983;50.928320312500006, 24.595117187500023;50.96601562500004, 24.573925781249983;51.022753906250074, 24.56523437499999;51.09335937500006, 24.564648437499955;51.178027343750074, 24.586718750000017;51.26796875, 24.607226562500017;51.33847656250006, 24.564355468749994;51.41123046875006, 24.570800781250057;51.30986328125002, 24.340380859375017;51.56835937500003, 24.286181640625074;51.592578125000074, 24.07885742187503;52.55507812500005, 22.932812499999955;55.104296875000074, 22.621484375000023;55.185839843750074, 22.7041015625;55.64101562499999, 22.001855468749994;54.97734375000002, 19.995947265625006;51.977636718750006, 18.996142578125074;49.04199218750003, 18.58178710937503;48.17216796875002, 18.156933593749983;47.57958984374997, 17.448339843750034;47.44179687499999, 17.111865234375045;47.14355468749997, 16.946679687499966;46.97568359375006, 16.953466796875034;46.72763671875006, 17.26557617187501;45.5353515625001, 17.30205078124999;45.14804687500006, 17.427441406249955;43.91699218749997, 17.32470703124997;43.41796875000003, 17.516259765625023;43.19091796875003, 17.359375;43.16503906249997, 16.689404296874955;42.79931640624997, 16.37177734375001;42.29394531249997, 17.434960937499966;41.75, 17.88574218749997;41.22949218750003, 18.678417968749983;40.75917968750005, 19.755468750000034;40.080664062500006, 20.265917968750017;39.728320312500074, 20.390332031249955;39.27607421875004, 20.973974609375034;39.093554687500074, 21.31035156249999;39.14707031250006, 21.518994140624955;38.98789062500006, 21.88173828125005;39.06201171874997, 22.592187500000023;38.46416015625002, 23.71186523437504;37.91972656250002, 24.185400390625063;37.54306640625006, 24.291650390625023;37.18085937500004, 24.82001953125001;37.26630859375004, 24.960058593750034;37.14882812499999, 25.291113281249977;35.18046875000002, 28.03486328125004;34.722070312499994, 28.130664062500017;34.625, 28.064501953125017;34.95078125, 29.353515625;36.068457031250006, 29.200537109375006;36.28281250000006, 29.355371093750023;36.47607421874997, 29.49511718749997;36.59179687500003, 29.666113281250006;36.703906250000074, 29.831640624999977;36.75527343750005, 29.86601562499996;37.46923828125003, 29.995068359374955;37.49072265625003, 30.01171874999997;37.55361328125005, 30.14458007812496;37.63359375000002, 30.313281250000045;37.64990234374997, 30.330957031249994;37.669726562500074, 30.34814453125003;37.862890625, 30.44262695312503;37.98007812500006, 30.5;37.47900390624997, 31.007763671874955;37.10527343750002, 31.35517578125004;36.95859375000006, 31.491503906250017;37.215625, 31.55610351562501;37.49335937500004, 31.625878906250023;38.111425781250006, 31.78115234375005;38.37548828124997, 31.84746093749996;38.962304687499994, 31.99492187499999;38.99707031249997, 32.00747070312505;39.145410156249994, 32.12451171875;39.36865234374997, 32.09174804687498;39.70410156250003, 32.04252929687499;40.02783203124997, 31.995019531249994;40.3693359375001, 31.93896484375003;40.47890625000005, 31.89335937499999;42.07441406250004, 31.08037109374999;43.77373046875002, 29.84921875;44.71650390625004, 29.19360351562503;46.35644531250003, 29.06367187500001;46.53144531250004, 29.09624023437499"]};
      rs = shate;
    }
    count = rs.boundaries.length; //行政区域的点有多少个
    if (count === 0) {
        alert(name);
        return ;
    }

    for (var i = 0; i < count; i++) {
        var ply = new BMap.Polygon(rs.boundaries[i], {strokeWeight: 1, strokeColor: "#aaaaaa", fillColor: fillColor}); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
    }
  });
}

function highLightRegion(distCityName, regionList, capitalVsProvince){
  for(var i=0; i<regionList.length; i++){
    var name = regionList[i][0]; // 省份名字. regionList[i]=["黑龙江","#F09ABD"]
    var item = null;
    var provName = capitalVsProvince[distCityName];

    if(provName == name){
      item = regionList[i];
      getBoundary(item); //给该地区着色. e.g. ["黑龙江","#F09ABD"]
      break;
    }
  }
}

var counterTime = 0;
var lenData = BeijingToOtherPlaces.length + 1;
var series = [];
function setTimeCallback(){
          counterTime = counterTime + 1;
          var regionName = '';
          if(counterTime > lenData){
            counterTime = 0;
            series.splice(0, series.length);
          }
          else{
              var temp = counterTime % lenData; //取整数.
              var List = BeijingToOtherPlaces.slice(temp-1, temp); //这样可以避免特效重叠.
//               console.log("List");
//               console.log(List);
               distCityName = BeijingToOtherPlaces[temp-1][1].name; //地区名称.
              var seriesList = getMigrateData(List); //List=[[], ...]
              for(var i=0; i<seriesList.length; i++){
                 series.push(seriesList[i]);
              }
          }
//          console.log("series");
//          console.log(series);

        myChart.setOption({ // 起飞.
            series: series   // 将之前处理的数据放到这里
        });
        highLightRegion(distCityName, regionList, capitalVsProvince); //着色.


    }
var interval = null;

var flag = false;
var counterClick = 0;
$("#clickButton").click(function (e){

       flag = !flag;
       counterClick ++;
       if(flag){
         interval = setInterval(setTimeCallback, 2000);
       }
       else{
         clearInterval(interval);
       }

});

