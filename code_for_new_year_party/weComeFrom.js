var myChart = echarts.init(document.getElementById('main'));

var geoCoordMap = {
    //'南宁': [108.479, 23.1152],
    //'广州': [113.5107, 23.2196],
    //'重庆': [107.7539, 30.1904],
    '芬兰': [24.909912, 60.169095],
    '美国': [-100.696295, 33.679979],
    '日本': [139.710164, 35.706962],
    '韩国': [126.979208, 37.53875],
    '瑞士': [7.445147, 46.956241],
    '东南亚': [117.53244, 5.300343],
    '澳大利亚': [135.193845, -25.304039],
    '德国': [13.402393, 52.518569],
    '英国': [-0.126608, 51.208425],
    '加拿大': [-102.646409, 59.994255],
    '海门':[121.15,31.89],
    '鄂尔多斯':[109.781327,39.608266],
    '招远':[120.38,37.35],
    '舟山':[122.207216,29.985295],
    '齐齐哈尔':[123.97,47.33],
    '盐城':[120.13,33.38],
    '赤峰':[118.87,42.28],
    '青岛':[120.33,36.07],
    '乳山':[121.52,36.89],
    '金昌':[102.188043,38.520089],
    '泉州':[118.58,24.93],
    '莱西':[120.53,36.86],
    '日照':[119.46,35.42],
    '胶南':[119.97,35.88],
    '南通':[121.05,32.08],
    '拉萨':[91.11,29.97],
    '云浮':[112.02,22.93],
    '梅州':[116.1,24.55],
    '文登':[122.05,37.2],
    '上海':[121.48,31.22],
    '攀枝花':[101.718637,26.582347],
    '威海':[122.1,37.5],
    '承德':[117.93,40.97],
    '厦门':[118.1,24.46],
    '汕尾':[115.375279,22.786211],
    '潮州':[116.63,23.68],
    '丹东':[124.37,40.13],
    '太仓':[121.1,31.45],
    '曲靖':[103.79,25.51],
    '烟台':[121.39,37.52],
    '福州':[119.3,26.08],
    '瓦房店':[121.979603,39.627114],
    '即墨':[120.45,36.38],
    '抚顺':[123.97,41.97],
    '玉溪':[102.52,24.35],
    '张家口':[114.87,40.82],
    '阳泉':[113.57,37.85],
    '莱州':[119.942327,37.177017],
    '湖州':[120.1,30.86],
    '汕头':[116.69,23.39],
    '昆山':[120.95,31.39],
    '宁波':[121.56,29.86],
    '湛江':[110.359377,21.270708],
    '揭阳':[116.35,23.55],
    '荣成':[122.41,37.16],
    '连云港':[119.16,34.59],
    '葫芦岛':[120.836932,40.711052],
    '常熟':[120.74,31.64],
    '东莞':[113.75,23.04],
    '河源':[114.68,23.73],
    '淮安':[119.15,33.5],
    '泰州':[119.9,32.49],
    '南宁':[108.33,22.84],
    '营口':[122.18,40.65],
    '惠州':[114.4,23.09],
    '江阴':[120.26,31.91],
    '蓬莱':[120.75,37.8],
    '韶关':[113.62,24.84],
    '嘉峪关':[98.289152,39.77313],
    '广州':[113.23,23.16],
    '延安':[109.47,36.6],
    '太原':[112.53,37.87],
    '清远':[113.01,23.7],
    '中山':[113.38,22.52],
    '昆明':[102.73,25.04],
    '寿光':[118.73,36.86],
    '盘锦':[122.070714,41.119997],
    '长治':[113.08,36.18],
    '深圳':[114.07,22.62],
    '珠海':[113.52,22.3],
    '宿迁':[118.3,33.96],
    '咸阳':[108.72,34.36],
    '铜川':[109.11,35.09],
    '平度':[119.97,36.77],
    '佛山':[113.11,23.05],
    '海口':[110.35,20.02],
    '江门':[113.06,22.61],
    '章丘':[117.53,36.72],
    '肇庆':[112.44,23.05],
    '大连':[121.62,38.92],
    '临汾':[111.5,36.08],
    '吴江':[120.63,31.16],
    '石嘴山':[106.39,39.04],
    '沈阳':[123.38,41.8],
    '苏州':[120.62,31.32],
    '茂名':[110.88,21.68],
    '嘉兴':[120.76,30.77],
    '长春':[125.35,43.88],
    '胶州':[120.03336,36.264622],
    '银川':[106.27,38.47],
    '张家港':[120.555821,31.875428],
    '三门峡':[111.19,34.76],
    '锦州':[121.15,41.13],
    '南昌':[115.89,28.68],
    '柳州':[109.4,24.33],
    '三亚':[109.511909,18.252847],
    '自贡':[104.778442,29.33903],
    '吉林':[126.57,43.87],
    '阳江':[111.95,21.85],
    '泸州':[105.39,28.91],
    '西宁':[101.74,36.56],
    '宜宾':[104.56,29.77],
    '呼和浩特':[111.65,40.82],
    '成都':[104.06,30.67],
    '大同':[113.3,40.12],
    '镇江':[119.44,32.2],
    '桂林':[110.28,25.29],
    '张家界':[110.479191,29.117096],
    '宜兴':[119.82,31.36],
    '北海':[109.12,21.49],
    '西安':[108.95,34.27],
    '金坛':[119.56,31.74],
    '东营':[118.49,37.46],
    '牡丹江':[129.58,44.6],
    '遵义':[106.9,27.7],
    '绍兴':[120.58,30.01],
    '扬州':[119.42,32.39],
    '常州':[119.95,31.79],
    '潍坊':[119.1,36.62],
    '重庆':[106.54,29.59],
    '台州':[121.420757,28.656386],
    '南京':[118.78,32.04],
    '滨州':[118.03,37.36],
    '贵阳':[106.71,26.57],
    '无锡':[120.29,31.59],
    '本溪':[123.73,41.3],
    '克拉玛依':[84.77,45.59],
    '渭南':[109.5,34.52],
    '马鞍山':[118.48,31.56],
    '宝鸡':[107.15,34.38],
    '焦作':[113.21,35.24],
    '句容':[119.16,31.95],
    '北京':[116.46,39.92],
    '徐州':[117.2,34.26],
    '衡水':[115.72,37.72],
    '包头':[110,40.58],
    '绵阳':[104.73,31.48],
    '乌鲁木齐':[87.68,43.77],
    '枣庄':[117.57,34.86],
    '杭州':[120.19,30.26],
    '淄博':[118.05,36.78],
    '鞍山':[122.85,41.12],
    '溧阳':[119.48,31.43],
    '库尔勒':[86.06,41.68],
    '安阳':[114.35,36.1],
    '开封':[114.35,34.79],
    '济南':[117,36.65],
    '德阳':[104.37,31.13],
    '温州':[120.65,28.01],
    '九江':[115.97,29.71],
    '邯郸':[114.47,36.6],
    '临安':[119.72,30.23],
    '兰州':[103.73,36.03],
    '沧州':[116.83,38.33],
    '临沂':[118.35,35.05],
    '南充':[106.110698,30.837793],
    '天津':[117.2,39.13],
    '富阳':[119.95,30.07],
    '泰安':[117.13,36.18],
    '诸暨':[120.23,29.71],
    '郑州':[113.65,34.76],
    '哈尔滨':[126.63,45.75],
    '聊城':[115.97,36.45],
    '芜湖':[118.38,31.33],
    '唐山':[118.02,39.63],
    '平顶山':[113.29,33.75],
    '邢台':[114.48,37.05],
    '德州':[116.29,37.45],
    '济宁':[116.59,35.38],
    '荆州':[112.239741,30.335165],
    '宜昌':[111.3,30.7],
    '义乌':[120.06,29.32],
    '丽水':[119.92,28.45],
    '洛阳':[112.44,34.7],
    '秦皇岛':[119.57,39.95],
    '株洲':[113.16,27.83],
    '贺州': [111.26796,24.84222],
    '石家庄':[114.48,38.03],
    '莱芜':[117.67,36.19],
    '常德':[111.69,29.05],
    '保定':[115.48,38.85],
    '湘潭':[112.91,27.87],
    '金华':[119.64,29.12],
    '岳阳':[113.09,29.37],
    '长沙':[113,28.21],
    '衢州':[118.88,28.97],
    '廊坊':[116.7,39.53],
    '菏泽':[115.480656,35.23375],
    '合肥':[117.27,31.86],
    '武汉':[114.31,30.52],
    "松原":[124.853515,45.14654],
    "安丘":[119.255788,36.47386],
    "鸡西":[130.977057,45.30554],
    "大庆":[125.107799,46.586698],
    "漳州":[117.679163,24.518667],
    "益阳":[112.358355,28.553874],
    "邵阳":[111.472995,27.233708],
    "六盘水":[104.848764,26.591856],
    "济源":[112.54735,35.076453],
    "许昌":[113.834038,34.029227],
    "蚌埠":[117.376829,32.930009],
    "运城":[111.022296,35.041454],
    "忻州":[112.736308,38.429392],
    "抚州":[116.365974,27.950553],
    "赣州":[114.944245,25.841159],
    "新乡":[115.038862,26.126599],
//    "枣庄":[117.304955,34.816231],
//    "泰安":[117.091761,36.193392],
//    "义乌":[120.063472,29.307371]
   "晋城":[120.063472,29.307371],
   "济源":[112.57782,35.024918]





};

var goToBeijing = {
    "广西":[ //
       [{name:'贺州', value:10}, {name:'北京',value:10}],
       [{name:'南宁', value:10}, {name:'北京',value:10}]
    ],
    "福建":[ //
       [{name:'漳州', value:20}, {name:'北京',value:10}]
    ],
    "内蒙古":[ //
       [{name:'包头', value:30}, {name:'北京',value:10}]
    ],
    "湖南":[ //
        [{name:'株洲', value:40}, {name:'北京',value:10}],
        [{name:'益阳', value:40}, {name:'北京',value:10}],
        [{name:'邵阳', value:40}, {name:'北京',value:10}]
    ],
    "山东":[ //
        [{name:'安丘', value:50}, {name:'北京',value:10}],
        [{name:'潍坊', value:50}, {name:'北京',value:10}],
        [{name:'济宁', value:50}, {name:'北京',value:10}],
        [{name:"枣庄", value:50}, {name:'北京',value:10}],
        [{name:"泰安", value:50}, {name:'北京',value:10}]
    ],

    "天津":[ //
       [{name:'天津', value:70}, {name:'北京',value:10}]
    ],
    "贵州":[ //
       [{name:'六盘水', value:75}, {name:'北京',value:10}]
    ],
    "黑龙江":[ //
      [{name:'鸡西', value:0}, {name:'北京',value:10}],
      [{name:'大庆', value:0}, {name:'北京',value:10}]
    ],

    "江苏":[ //
      [{name:'淮安', value:40}, {name:'北京',value:10}],
      [{name:'盐城', value:40}, {name:'北京',value:10}],
      [{name:'南京', value:40}, {name:'北京',value:10}]
    ],
    "浙江":[ //
      [{name:'义乌', value:70}, {name:'北京',value:10}],
      [{name:'温州', value:70}, {name:'北京',value:10}]

    ],
    "河南":[ //
      [{name:'济源', value:80}, {name:'北京',value:10}],
      [{name:'郑州', value:80}, {name:'北京',value:10}],
      [{name:'许昌', value:80}, {name:'北京',value:10}],
      [{name:"新乡", value:80}, {name:'北京',value:10}]
    ],
    "湖北":[ //
      [{name:'荆州', value:160}, {name:'北京',value:10}]
    ],
    "安徽":[ //
      [{name:'蚌埠', value:160}, {name:'北京',value:10}]
    ],
    "山西":[ //
      [{name:'太原', value:10}, {name:'北京',value:10}],
      [{name:'运城', value:10}, {name:'北京',value:10}],
      [{name:'忻州', value:10}, {name:'北京',value:10}],
      [{name:'晋城', value:10}, {name:'北京',value:10}],
      [{name:'临汾', value:10}, {name:'北京',value:10}]
    ],
    "河北":[ //
      [{name:'秦皇岛', value:180}, {name:'北京',value:10}],
      [{name:'邯郸', value:180}, {name:'北京',value:10}],
      [{name:'衡水', value:180}, {name:'北京',value:10}],
      [{name:'唐山', value:180}, {name:'北京',value:10}],
      [{name:'石家庄', value:180}, {name:'北京',value:10}]
    ],
    "云南":[ //
      [{name:'曲靖', value:190}, {name:'北京',value:10}]
    ],
    "江西":[ //
      [{name:'抚州', value:0}, {name:'北京',value:10}],
      [{name:'赣州', value:0}, {name:'北京',value:10}]
    ],
    "吉林":[ //
       [{name:'松原', value:15}, {name:'北京',value:10}],
       [{name:'长春', value:15}, {name:'北京',value:10}]
    ],
    "陕西":[ //
       [{name:'西安', value:15}, {name:'北京',value:10}]
    ],
}; //边数据.
var provList = ["云南", "黑龙江", "吉林", "内蒙古","陕西", "山西", "河北", "天津", "山东", "江苏", "浙江", "安徽", "河南", "湖北", "湖南", "广西", "福建", "江西", "贵州"];
var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';
//var planePath = 'image://img/person.png'; //自己定制的图片.
var convertData = function (data) {
    var res = [];
    for (var i = 0; i < data.length; i++) {
        var dataItem = data[i];
        var fromCoord = geoCoordMap[dataItem[0].name];
        var toCoord = geoCoordMap[dataItem[1].name];
        if (fromCoord && toCoord) {
            res.push({
                fromName: dataItem[0].name,
                toName: dataItem[1].name,
                coords: [fromCoord, toCoord]
            });
        }
    }
    return res; //[{fromName: x, toName: x, coords: [x, x]}, ...]
};

//var gradientColorList = gradientColor("#0277BD", "#1BF0B0", 200);

function getMigrateData(yourData){ // yourData=[[{name:'北京'}, {name:'上海',value:95}], ...]
     var series = [];
     series.push(
        { // 第一层:飞机尾气特效层.

            type: 'lines',
            coordinateSystem: 'bmap', //用百度地图地理坐标.
            zlevel: 1,
            effect: {
                show: true,               // 动效是否显示
                period: 4,                // 飞机喷气的飞行速度,应该与飞机的速度一致.
                trailLength: 0.8,         // 特效尾迹的长度
                color: '#0EEDAD',            // 尾气特效颜色
                symbolSize: 8             // 特效大小
            },
            lineStyle: {
                normal: { // 正常情况下的线条样式
                    color: "#0FE886",
                    width: 0,             // 因为是叠加效果，要是有宽度，线条会变粗，白色航线特效不明显
                    curveness: -0.2       // 线条曲度
                }
            },
            data: convertData(yourData)
        },
        { // 第二层:飞机飞行特效

            type: 'lines',
            coordinateSystem: 'bmap',
            zlevel: 2,
//            symbol: ['none', 'arrow'],   // 用于设置箭头
//            symbolSize: 10, //箭头大小.
            effect: {
                show: true,
                period: 4, // 小飞机的飞行速度.
                trailLength: 0,
                symbol: planePath, // 特效形状，可以用其他svg pathdata路径代替
                symbolSize: 25, //飞机的大小.
                color: '#CDCCCB', //小飞机的颜色.
            },
            lineStyle: {
                normal: {
                    color: "#1976D2", //连线的颜色.
                    width: 2, //连线的宽度.
                    opacity: 0.6,
                    curveness: -0.2
                }
            },
            data: convertData(yourData)
        },
        { //第三层: 涟漪特效层.

            type: 'effectScatter',
            coordinateSystem: 'bmap',
            zlevel: 2,
            showEffectOn: 'render', //绘制完成后显示波纹
            rippleEffect: {
                brushType: 'stroke'
            },
            label: {
                normal: {
                    show: true,
                    position: 'right',
                    formatter: '{b}'
                }
            },

            data: (function (yourData){ // [[], [], ...]
                  var returnData = [];
                  yourData.forEach(function(item, i){ // item=[{}, {}]

                     for(var j=0; j<item.length; j++){
                         var dataItem = item[j];
                         var temp = {
                            name: dataItem.name, //起始点.
                            value: geoCoordMap[dataItem.name].concat([dataItem.value]),  // 起点的位置 [x, y, v], v决定涟漪的颜色.
                            symbolSize: 10,  // 散点的大小，通过之前设置的权重来计算，val的值来自data返回的value
                            itemStyle: { //这里可以定制每个点的颜色.
                                normal: {
                                    color: "#ff0000", //波纹效果的颜色,可以自己定制颜色.
                                    shadowBlur: 10,
                                    shadowColor: '#333'
                                }
                            },
                            rippleEffect: { //这里可以定制每个点的涟漪效果.
                                period:1,//动画速度
                                scale:5,//波纹的范围
                                brushType: 'fill'//波纹样式(fill填充型) stroke/fill
                            }
                        };

                       if(returnData.length > 0){
                          var counter = 0;
                          for(var jj=0; jj<returnData.length; jj++){
                              var itemObj = returnData[jj];
                              if(itemObj.name == dataItem.name){
                               counter ++;
                               break;
                             }
                          }
                          if(counter == 0){
                            returnData.push(temp);
                          }
                       }
                       else{
                         returnData.push(temp);
                       }
                     }

                  });
//                  console.log(returnData);
                  return returnData;


                })(yourData)
        }
     );

     return series; //[{}, {}, {}], 三个特效层.
}

//var series = getMigrateData(BeijingToOtherPlaces);
var option = {
    backgroundColor: '#404a59',
    title : {
        show: false,
        text: '模拟迁徙',
        subtext: '数据纯属虚构',
        left: 'center',
        textStyle : {
            color: '#fff'
        }
    },
    tooltip : {
        trigger: 'item'
    },
    legend: {
        show:false,
        orient: 'vertical',
        top: 'bottom',
        left: 'right',
        data:['北京 Top10', '上海 Top10', '广州 Top10'],
        textStyle: {
            color: '#fff'
        },
        selectedMode: 'single'
    },
    dataRange: {
        show:false,
        min: 0,
        max: 100,
        x: 'right',
        calculable: true,
        color: ['#ff3333', 'orange', 'yellow', 'lime', 'aqua'],
        textStyle: {
            color: '#fff'
        }
    },
    bmap: {
        center: [103.9526,30.7617], // 百度地图的中心点:成都.
        zoom: 5,
        roam: true // 备注:用echarts设置mapStyle时,会出现小白格现象.而使用百度地图API:map.setMapStyle,则不会出现此情况.
    },
    series: []
};

myChart.setOption(option); //初始化配置.

var map = myChart.getModel().getComponent('bmap').getBMap(); //获得百度地图API.
//通过取色器获取各省颜色
var regionList = [["沙特阿拉伯", "#F09ABD"], ["黑龙江","#F09ABD"],["吉林","#01933F"],["辽宁","#FAC300"],["内蒙古","#FCF502"],["河北","#F09ABD"],["北京","#FCF502"],["天津","#01933F"],["山东","#FCF502"],["江苏","#D8EDDA"],["上海","#B9B4C8"],["浙江","#FCF502"],["福建","#FAC300"],["台湾","#F09ABD"],["广东","#FCF502"],["香港","#F09ABD"],["澳门","#F09ABD"],["海南","#F09ABD"],["广西","#FAC300"],["云南","#FCF502"],["西藏","#B9B4C8"],["新疆","#FAC300"],["甘肃","#01933F"],["青海","#F09ABD"],["四川","#FAC300"],["贵州","#01933F"],["重庆","#B9B4C8"],["湖南","#F09ABD"],["江西","#01933F"],["湖北","#FCF502"],["安徽","#FAC300"],["河南","#B9B4C8"],["陕西","#F09ABD"],["山西","#01933F"],["宁夏","#FAC300"]];

//map.centerAndZoom("成都", 5); //取兰州作为中心点

map.addControl(new BMap.NavigationControl()); // 缩放控件
//map.addControl(new BMap.ScaleControl()); // 比例尺图标.
//map.enableScrollWheelZoom(); //使能鼠标滚动放大.
map.setMapStyle({
    features: ["road", "building", "water", "land"],//隐藏地图上的poi
    style: "normal", //设置地图风格 midnight:午夜蓝, dark:高端黑, 清新蓝风格(light) googlelite(白) normal(白)
    styleJson: [
        {//不显示点信息
            "featureType": "poi",
            "elementType": "all",
            "stylers": {
                "color": "#ffffff",
                "visibility": "off"
            }
        }
    ]
});

function getBoundary(provItem){ //获得边界函数. provItem=["黑龙江","#F09ABD"]

  var bdary = new BMap.Boundary(); // API:获得边界.
  var name = provItem[0]; // 名字.
  var fillColor = provItem[1]; // 颜色.

  bdary.get(name, function(rs){       //获取行政区域

    var count = 0;
    if(name == "沙特阿拉伯"){
      var shate = {boundaries:["41.98769531250005, 16.715625;42.059960937499994, 16.803515625000017;42.15781250000006, 16.570703125000023;41.80156250000002, 16.778759765624955;41.86044921875006, 17.002539062499977;41.98769531250005, 16.715625", "46.53144531250004, 29.09624023437499;47.433203125, 28.989550781250017;47.671289062499994, 28.53315429687504;48.442480468750006, 28.542919921874983;48.80898437499999, 27.895898437499966;48.797167968750074, 27.72431640625001;49.2375, 27.49272460937499;49.17509765625002, 27.43764648437505;49.40527343749997, 27.18095703124996;50.149804687499994, 26.66264648437499;50.00810546875002, 26.678515625000017;50.21386718750003, 26.30849609375005;50.15546875000004, 26.100537109374955;50.03164062499999, 26.11098632812505;50.55791015625002, 25.086669921875;50.66689453125005, 24.96381835937501;50.72558593749997, 24.869384765625057;50.80439453125004, 24.789257812499983;50.928320312500006, 24.595117187500023;50.96601562500004, 24.573925781249983;51.022753906250074, 24.56523437499999;51.09335937500006, 24.564648437499955;51.178027343750074, 24.586718750000017;51.26796875, 24.607226562500017;51.33847656250006, 24.564355468749994;51.41123046875006, 24.570800781250057;51.30986328125002, 24.340380859375017;51.56835937500003, 24.286181640625074;51.592578125000074, 24.07885742187503;52.55507812500005, 22.932812499999955;55.104296875000074, 22.621484375000023;55.185839843750074, 22.7041015625;55.64101562499999, 22.001855468749994;54.97734375000002, 19.995947265625006;51.977636718750006, 18.996142578125074;49.04199218750003, 18.58178710937503;48.17216796875002, 18.156933593749983;47.57958984374997, 17.448339843750034;47.44179687499999, 17.111865234375045;47.14355468749997, 16.946679687499966;46.97568359375006, 16.953466796875034;46.72763671875006, 17.26557617187501;45.5353515625001, 17.30205078124999;45.14804687500006, 17.427441406249955;43.91699218749997, 17.32470703124997;43.41796875000003, 17.516259765625023;43.19091796875003, 17.359375;43.16503906249997, 16.689404296874955;42.79931640624997, 16.37177734375001;42.29394531249997, 17.434960937499966;41.75, 17.88574218749997;41.22949218750003, 18.678417968749983;40.75917968750005, 19.755468750000034;40.080664062500006, 20.265917968750017;39.728320312500074, 20.390332031249955;39.27607421875004, 20.973974609375034;39.093554687500074, 21.31035156249999;39.14707031250006, 21.518994140624955;38.98789062500006, 21.88173828125005;39.06201171874997, 22.592187500000023;38.46416015625002, 23.71186523437504;37.91972656250002, 24.185400390625063;37.54306640625006, 24.291650390625023;37.18085937500004, 24.82001953125001;37.26630859375004, 24.960058593750034;37.14882812499999, 25.291113281249977;35.18046875000002, 28.03486328125004;34.722070312499994, 28.130664062500017;34.625, 28.064501953125017;34.95078125, 29.353515625;36.068457031250006, 29.200537109375006;36.28281250000006, 29.355371093750023;36.47607421874997, 29.49511718749997;36.59179687500003, 29.666113281250006;36.703906250000074, 29.831640624999977;36.75527343750005, 29.86601562499996;37.46923828125003, 29.995068359374955;37.49072265625003, 30.01171874999997;37.55361328125005, 30.14458007812496;37.63359375000002, 30.313281250000045;37.64990234374997, 30.330957031249994;37.669726562500074, 30.34814453125003;37.862890625, 30.44262695312503;37.98007812500006, 30.5;37.47900390624997, 31.007763671874955;37.10527343750002, 31.35517578125004;36.95859375000006, 31.491503906250017;37.215625, 31.55610351562501;37.49335937500004, 31.625878906250023;38.111425781250006, 31.78115234375005;38.37548828124997, 31.84746093749996;38.962304687499994, 31.99492187499999;38.99707031249997, 32.00747070312505;39.145410156249994, 32.12451171875;39.36865234374997, 32.09174804687498;39.70410156250003, 32.04252929687499;40.02783203124997, 31.995019531249994;40.3693359375001, 31.93896484375003;40.47890625000005, 31.89335937499999;42.07441406250004, 31.08037109374999;43.77373046875002, 29.84921875;44.71650390625004, 29.19360351562503;46.35644531250003, 29.06367187500001;46.53144531250004, 29.09624023437499"]};
      rs = shate;
    }
    count = rs.boundaries.length; //行政区域的点有多少个
    if (count === 0) {
        alert(name);
        return ;
    }

    for (var i = 0; i < count; i++) {
        var ply = new BMap.Polygon(rs.boundaries[i], {strokeWeight: 1, strokeColor: "#aaaaaa", fillColor: fillColor}); //建立多边形覆盖物
        map.addOverlay(ply);  //添加覆盖物
    }
  });
}


var counterTime = 0;

var keysList = Object.keys(goToBeijing);
var lenData = keysList.length;
var series = [];
function setTimeCallback(){
          counterTime = counterTime + 1;
        //  console.log(counterTime);

          if(counterTime > lenData){
            counterTime = 0;
            series.splice(0, series.length);
          }
          else{
              var temp = counterTime % lenData; //取整数.
              var key = provList[temp];
              var List = goToBeijing[key]; //数组.
              var seriesList = getMigrateData(List); //[{}, {}, {}]
              for(var i=0; i<seriesList.length; i++){
                 series.push(seriesList[i]);
              }

          }
        //  console.log(counterTime);
//          console.log("series");
//          console.log(series);
        //  console.log(List);
          myChart.setOption({
            series: series   // 将之前处理的数据放到这里
        });

}
var interval = null;

var flag = false;
var counterClick = 0;
$("#clickButton").click(function (e){

       flag = !flag;
       counterClick ++;
       if(flag){
         interval = setInterval(setTimeCallback, 1000);
       }
       else{
         clearInterval(interval);
       }

});


function gradientColor(startColor, endColor, step) { // 颜色渐变函数.
    startRGB = colorRgb(startColor);//转换为rgb数组模式
    startR = startRGB[0];
    startG = startRGB[1];
    startB = startRGB[2];

    endRGB = colorRgb(endColor);
    endR = endRGB[0];
    endG = endRGB[1];
    endB = endRGB[2];

    sR = (endR - startR) / step;//总差值
    sG = (endG - startG) / step;
    sB = (endB - startB) / step;

    var colorArr = [];
    for (var i = 0; i < step; i++) {
        //计算每一步的hex值
        var hex = colorHex('rgb('+ parseInt((sR * i + startR))+ ',' + parseInt((sG * i + startG))+ ',' + parseInt((sB * i + startB)) + ')');
        colorArr.push(hex);
    }
    return colorArr;
}

function colorRgb(colorHex){
    var sColor = colorHex.toLowerCase();
    //十六进制颜色值的正则表达式
    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
    // 如果是16进制颜色
    if (sColor && reg.test(sColor)) {
        if (sColor.length === 4) {
            var sColorNew = "#";
            for (var i=1; i<4; i+=1) {
                sColorNew += sColor.slice(i, i+1).concat(sColor.slice(i, i+1));
            }
            sColor = sColorNew;
        }
        //处理六位的颜色值
        var sColorChange = [];
        for (var i=1; i<7; i+=2) {
            sColorChange.push(parseInt("0x"+sColor.slice(i, i+2)));
        }
        return sColorChange;
        //return "RGB(" + sColorChange.join(",") + ")";
    }
    return sColor;
};

function colorHex(rgb){
    var that = rgb;
    //十六进制颜色值的正则表达式
    var reg = /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/;
    // 如果是rgb颜色表示
    if (/^(rgb|RGB)/.test(that)) {
        var aColor = that.replace(/(?:\(|\)|rgb|RGB)*/g, "").split(",");
        var strHex = "#";
        for (var i=0; i<aColor.length; i++) {
            var hex = Number(aColor[i]).toString(16);
            if (hex === "0") {
                hex += hex;
            }
            strHex += hex;
        }
        if (strHex.length !== 7) {
            strHex = that;
        }
        return strHex;
    } else if (reg.test(that)) {
        var aNum = that.replace(/#/,"").split("");
        if (aNum.length === 6) {
            return that;
        } else if(aNum.length === 3) {
            var numHex = "#";
            for (var i=0; i<aNum.length; i+=1) {
                numHex += (aNum[i] + aNum[i]);
            }
            return numHex;
        }
    }
    return that;
};


